apiVersion: v1
kind: Service
metadata:
  name: demo
spec:
  ports:
    - port: 8080
      targetPort: 8080
  selector:
    app: demo

---

apiVersion: apps/v1beta1
kind: Deployment
metadata:
  name: product
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: demo-product
    spec:
      restartPolicy: Always

      volumes:
      - name: shared-data
        emptyDir: {}

      containers:

      - name: product
        image: 172.16.0.32:60080/tsf/tsf-product
        imagePullPolicy: Always
        env:
          - name: RUN_ARGS
            value: "--server.port=0"
          - name: CONSUL_HOST
            value: "192.168.1.45"
          - name: CONSUL_PORT
            value: "80"
        volumeMounts:
        - name: shared-data
          mountPath: /app/servlet/logs

      - name: filebeat
        image: 172.16.0.32:60080/tsf/agent
        imagePullPolicy: Always
        env:
          - name: INSTANCE_ID
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
          - name: LOCAL_IP
            valueFrom:
              fieldRef:
                fieldPath: status.podIP
          - name: APP_ID
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
          - name: NAMESPACE_ID
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
        volumeMounts:
        - name: shared-data
          mountPath: /app/servlet/logs

---

apiVersion: apps/v1beta1
kind: Deployment
metadata:
  name: order
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: demo-order
    spec:
      restartPolicy: Always

      volumes:
      - name: shared-data
        emptyDir: {}

      containers:

      - name: order
        image: 172.16.0.32:60080/tsf/tsf-order
        imagePullPolicy: Always
        env:
          - name: RUN_ARGS
            value: "--server.port=0"
          - name: CONSUL_HOST
            value: "192.168.1.45"
          - name: CONSUL_PORT
            value: "80"
        volumeMounts:
        - name: shared-data
          mountPath: /app/servlet/logs

      - name: filebeat
        image: 172.16.0.32:60080/tsf/agent
        imagePullPolicy: Always
        env:
          - name: INSTANCE_ID
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
          - name: LOCAL_IP
            valueFrom:
              fieldRef:
                fieldPath: status.podIP
          - name: APP_ID
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
          - name: NAMESPACE_ID
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
        volumeMounts:
        - name: shared-data
          mountPath: /app/servlet/logs

---

apiVersion: apps/v1beta1
kind: Deployment
metadata:
  name: inventory
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: demo-inventory
    spec:
      restartPolicy: Always

      volumes:
      - name: shared-data
        emptyDir: {}

      containers:

      - name: inventory
        image: 172.16.0.32:60080/tsf/tsf-inventory
        imagePullPolicy: Always
        env:
          - name: RUN_ARGS
            value: "--server.port=0"
          - name: CONSUL_HOST
            value: "192.168.1.45"
          - name: CONSUL_PORT
            value: "80"
        volumeMounts:
        - name: shared-data
          mountPath: /app/servlet/logs

      - name: filebeat
        image: 172.16.0.32:60080/tsf/agent
        imagePullPolicy: Always
        env:
          - name: INSTANCE_ID
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
          - name: LOCAL_IP
            valueFrom:
              fieldRef:
                fieldPath: status.podIP
          - name: APP_ID
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
          - name: NAMESPACE_ID
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
        volumeMounts:
        - name: shared-data
          mountPath: /app/servlet/logs

---

apiVersion: apps/v1beta1
kind: Deployment
metadata:
  name: front
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: demo
    spec:
      restartPolicy: Always

      volumes:
      - name: shared-data
        emptyDir: {}

      containers:

      - name: front
        image: 172.16.0.32:60080/tsf/tsf-front
        ports:
        - containerPort: 8080
        imagePullPolicy: Always
        env:
          - name: RUN_ARGS
            value: "--server.port=8080"
          - name: CONSUL_HOST
            value: "192.168.1.45"
          - name: CONSUL_PORT
            value: "80"
        volumeMounts:
        - name: shared-data
          mountPath: /app/servlet/logs

      - name: filebeat
        image: 172.16.0.32:60080/tsf/agent
        imagePullPolicy: Always
        env:
          - name: INSTANCE_ID
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
          - name: LOCAL_IP
            valueFrom:
              fieldRef:
                fieldPath: status.podIP
          - name: APP_ID
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
          - name: NAMESPACE_ID
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
        volumeMounts:
        - name: shared-data
          mountPath: /app/servlet/logs


